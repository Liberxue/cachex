name: Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.12, 1.13, 1.14, 1.15, 1.16]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check formatting
        if: matrix.go-version == '1.16' && matrix.platform == 'ubuntu-latest'
        run: diff -u <(echo -n) <(go fmt $(go list ./...))

      - name: Run Unit tests
        run: |
          go install -race std
          go get golang.org/x/tools/cmd/cover
          go get github.com/mattn/goveralls
          go test -cover -race -count=1 -timeout=30s -run .
          go test -covermode=count -coverprofile=coverage.out -timeout=90s -run .
          go test -benchmem -run=^$  -bench=. -benchmem
      - name: Install goveralls
        env:
          GO111MODULE: off
        run: go get github.com/mattn/goveralls
      - name: Send coverage
        run: goveralls -coverprofile=coverage.out -service=travis-ci -repotoken  ${{ secrets.COVERALLS_TOKEN }}
